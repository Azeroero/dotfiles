#!/usr/bin/env sh

set -euo pipefail

GREEN="\033[0;32m"
RESET_COLOR='\033[0m'

function runv() {
    echo "${GREEN}>> $@${RESET_COLOR}"
    eval $@
    echo ""
}

if [[ $# -gt 1  && "$1" == "-v" && -e "$2" ]]; then
    # Pin to newest setuptools / zc.buildout versions
    echo "Writing custom buildout.cfg extending $2"
    cat > buildout.cfg <<EOF
[buildout]
extends = $2

[versions]
setuptools =
zc.buildout =
EOF
    shift 2;
fi

if [[ $# -gt 0  && -e "$1" ]]; then
    if [[ -L buildout.cfg ]]; then
	# buildout.cfg is a symlink - save to remove.
	runv rm buildout.cfg
    fi
    if [[ -e buildout.cfg ]]; then
	# buildout.cfg is not a symlink - refuse to work.
	echo "ERROR: buildout.cfg is not a symlink."
	exit 1
    fi
    runv ln -s $1 buildout.cfg
    shift
fi

if [[ ! -e buildout.cfg ]]; then
    echo "ERROR: buildout.cfg missing"
    exit 1
fi

if [[ ! -x bin/python ]]; then
    # Isolate with virtualenv against eggs installed in plonepy.
    if [[ `grep py3 buildout.cfg` ]]; then
        runv PYENV_VERSION=py3buildout python -m venv .
        echo ""
    else
        runv PYENV_VERSION=py2buildout virtualenv . --no-setuptools
        echo ""
    fi
fi

if [[ ! -e .python-version ]]; then
    # Enable plonpy pyenv-virtualenv version in order to let
    # emacs to static code analysis
    runv pyenv local py2plone
fi

if [[ ! -x bin/buildout ]]; then
    runv ./bin/pip install zc.buildout
fi

if [[ -x bin/buildout ]]; then
    runv ./bin/buildout $@
fi
